#Creates RunCommandDocument for shell scripts to run
Parameters:
  Environment:
    Type: String
    Description: The Environment this is launched in.
  ApplicationName:
    Type: String
    Description: The Application Name this is for.
  SSMRole:
    Type: String
    Description: The name of the SSM Role that the document Assumes.
Resources:
  RunCommandDocument:
    Type: AWS::SSM::Document
    Properties:
      Name: !Sub "${ApplicationName}RunCommand-${Environment}"
      DocumentType: Automation
      TargetType: "/AWS::EC2::Instance"
      Content:
        description: "This automation document implements an AWS-RunShellScript execution for a step functions waitForCallBack integration pattern."
        schemaVersion: "0.3"
        assumeRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/${SSMRole}"
        parameters:
          InstanceIds:
            type: StringList
            description: "The IDs of the instances where you want to run the command."
          taskToken:
            type: String
            description: "(Required) Step Function task token for callback response"
          Commands:
            type: StringList
            description: "(Required) Specify a shell script or a command to run."
          workingDirectory:
            type: String
            default: '""'
            description: "(Optional) The path to the working directory on your instance."
          executionTimeout:
            type: String
            description: "(Optional) The path to the working directory on your instance."
            default: "3600"
        mainSteps:
          - name: RunCommand
            action: aws:runCommand
            inputs:
              DocumentName: AWS-RunShellScript
              Parameters:
                commands: "{{Commands}}"
                workingDirectory: "{{workingDirectory}}"
                executionTimeout: "{{executionTimeout}}"
              InstanceIds: "{{ InstanceIds }}"
            nextStep: SendTaskSuccess
            onFailure: step:SendTaskFailure
            onCancel: step:SendTaskFailure
          - name: SendTaskSuccess
            action: aws:executeAwsApi
            inputs:
              Service: stepfunctions
              Api: send_task_success
              taskToken: "{{ taskToken }}"
              output: "{}"
            isEnd: true
            timeoutSeconds: 50
          - name: SendTaskFailure
            action: aws:executeAwsApi
            inputs:
              Service: stepfunctions
              Api: send_task_failure
              taskToken: "{{ taskToken }}"
              error: Automation document failure
              cause: RunCommand failed, check command execution id "{{automation:EXECUTION_ID}}" for more details. "{{RunCommand.Output}}"
            isEnd: true
            timeoutSeconds: 50
